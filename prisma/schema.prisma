generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_URL")
}

// ===== SITE INFO =====
model Site {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  favicon     String
}

// ===== AUTHOR INFO =====
model Author {
  id       Int      @id @default(autoincrement())
  name     String
  nickName String
  role     String
  bio      String
  avatar   String
  social   Social?
  techStack TechStack[]
}

model Social {
  id        Int    @id @default(autoincrement())
  email     String
  whatsapp  String
  github    String
  linkedin  String
  instagram String
  authorId  Int    @unique
  author    Author @relation(fields: [authorId], references: [id])
}

model TechStack {
  id        Int    @id @default(autoincrement())
  name      String
  authorId  Int?   // Nullable so tech stacks can belong to either Author or Project
  projectId Int?
  author    Author? @relation(fields: [authorId], references: [id])
  project   Project? @relation(fields: [projectId], references: [id])
}

// ===== PROJECTS =====
model Project {
  id          Int           @id @default(autoincrement())
  title       String
  slug        String         @unique
  description String
  githubRepo  String?
  liveDemo    String?
  images      ProjectImage[]
  techStack   TechStack[]
  keyFeatures KeyFeature[]
}

model ProjectImage {
  id        Int     @id @default(autoincrement())
  url       String
  projectId Int
  project   Project @relation(fields: [projectId], references: [id])
}

model KeyFeature {
  id          Int     @id @default(autoincrement())
  feature     String
  description String
  projectId   Int
  project     Project @relation(fields: [projectId], references: [id])
}
